{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\\\Desktop\\\\new_proj\\\\React\\\\new-app\\\\src\\\\Pages\\\\UserInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDataByToken, sendData } from '../fetch';\nimport Navbar from '../Components/UI/Navbar/Navbar';\nimport classes from './UserInfo.module.css';\nimport NewInput from '../Components/UI/NewInput/NewInput';\nimport PostView from '../Components/UI/PostView/PostView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const [nick, setNick] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [ava, setAva] = useState(\"\");\n  useEffect(() => {\n    getDataByToken(\"http://127.0.0.1:5000/@me\").then(result => {\n      if (result.status === 200) {\n        setNick(result.data[1]);\n        setEmail(result.data[3]);\n        if (result.data[4]) {\n          setAva(result.data[4]);\n        }\n      }\n    });\n  }, []);\n  const deletePost = () => {};\n  const getPosts = () => {\n    getDataByToken(\"http://127.0.0.1:5000/get_posts\").then(result => {\n      if (result.status === 200) {\n        setPosts(result.data);\n      }\n    });\n  };\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.user_info,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.ava,\n          children: ava ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ava,\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('./a1jvy5NO0-8 (1).jpg'),\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.p,\n            children: [\"Nick: \", nick]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.p,\n            children: [\"Email: \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NewInput, {\n            value: post,\n            onChange: e => setPost(e.target.value),\n            placeholder: \"New post\",\n            type: \"textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n            onClick: async e => {\n              if (post.trim().length < 10) {\n                alert('Zbyt krótki post, napisz coś jeszcze...');\n              } else {\n                let res = await sendData('http://127.0.0.1:5000/upload_post', {\n                  text: post\n                }, '');\n                if (res.status === 200) {\n                  setPost(\"\");\n                  getPosts();\n                }\n                setMsg(res.data.msg);\n              }\n            },\n            text: \"Publish\",\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.posts,\n        children: posts ? posts.map(post => /*#__PURE__*/_jsxDEV(PostView, {\n          currentPosts: posts,\n          content: post[1],\n          date: post[3],\n          idKey: post[0]\n        }, posts.indexOf(post), false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }, this)) : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(UserInfo, \"ALcV5b4OguU+pS3tq47H0BPCPv8=\");\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useEffect","getDataByToken","sendData","Navbar","classes","NewInput","PostView","jsxDEV","_jsxDEV","UserInfo","_s","nick","setNick","email","setEmail","post","setPost","msg","setMsg","posts","setPosts","ava","setAva","then","result","status","data","deletePost","getPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","className","main","user_info","src","alt","require","p","value","onChange","e","target","placeholder","type","onClick","trim","length","alert","res","text","map","currentPosts","content","date","idKey","indexOf","_c","$RefreshReg$"],"sources":["C:/Users/М/Desktop/new_proj/React/new-app/src/Pages/UserInfo.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { getDataByToken, sendData } from '../fetch'\r\nimport Navbar from '../Components/UI/Navbar/Navbar'\r\nimport classes from './UserInfo.module.css'\r\nimport NewInput from '../Components/UI/NewInput/NewInput'\r\nimport PostView from '../Components/UI/PostView/PostView'\r\n\r\n\r\nconst UserInfo = () => {\r\n    const [nick, setNick] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [post, setPost] = useState(\"\")\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [posts, setPosts] = useState([])\r\n    const [ava, setAva] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n      getDataByToken(\"http://127.0.0.1:5000/@me\").then(result => {\r\n        if (result.status === 200) {\r\n          setNick(result.data[1])\r\n          setEmail(result.data[3])\r\n          if (result.data[4]) {\r\n            setAva(result.data[4])\r\n          }\r\n        }\r\n      })\r\n    }, [])\r\n    const deletePost = () => {}\r\n    const getPosts = () => {\r\n      getDataByToken(\"http://127.0.0.1:5000/get_posts\").then(result => {\r\n        if (result.status === 200) {\r\n          setPosts(result.data)\r\n        }\r\n      })\r\n    }\r\n    useEffect(() => {\r\n      getPosts()\r\n    }, [])\r\n\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <div className={classes.main}>\r\n          <div className={classes.user_info}>\r\n              <div className={classes.ava}>\r\n                {ava ? (<img src={ava} alt='Avatar'></img>): (<img src={require('./a1jvy5NO0-8 (1).jpg')} alt='Avatar'></img>)}                  \r\n              </div>\r\n\r\n                <div>\r\n                  <p className={classes.p}>Nick: {nick}</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <p className={classes.p}>Email: {email}</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <NewInput value={post} onChange={(e) => setPost(e.target.value)} placeholder=\"New post\" type='textarea'/>\r\n                  <NewInput onClick={async (e) => {\r\n                    if (post.trim().length < 10) {\r\n                      alert('Zbyt krótki post, napisz coś jeszcze...')\r\n                    }\r\n                    else {\r\n                      let res = await sendData('http://127.0.0.1:5000/upload_post', {text: post}, '')\r\n                      if (res.status === 200) {setPost(\"\"); getPosts()} \r\n                      setMsg(res.data.msg)\r\n                    }\r\n                  }\r\n                    } \r\n                    text=\"Publish\" type='button'/>\r\n                </div>\r\n              <div>\r\n                <h3>{msg}</h3>\r\n              </div>\r\n          </div>\r\n        <div className={classes.posts}>\r\n          {posts ? posts.map(post => <PostView currentPosts={posts} content={post[1]} date={post[3]} key={posts.indexOf(post)} idKey={post[0]}/>): []}\r\n        </div>\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,cAAc,EAAEC,QAAQ,QAAQ,UAAU;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,QAAQ,MAAM,oCAAoC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,GAAG,EAAEC,MAAM,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAElCC,SAAS,CAAC,MAAM;IACdC,cAAc,CAAC,2BAA2B,CAAC,CAACsB,IAAI,CAACC,MAAM,IAAI;MACzD,IAAIA,MAAM,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBb,OAAO,CAACY,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;QACvBZ,QAAQ,CAACU,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAIF,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,EAAE;UAClBJ,MAAM,CAACE,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,UAAU,GAAGA,CAAA,KAAM,CAAC,CAAC;EAC3B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB3B,cAAc,CAAC,iCAAiC,CAAC,CAACsB,IAAI,CAACC,MAAM,IAAI;MAC/D,IAAIA,MAAM,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBL,QAAQ,CAACI,MAAM,CAACE,IAAI,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EACD1B,SAAS,CAAC,MAAM;IACd4B,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACL,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACTzB,OAAA;MAAK0B,SAAS,EAAE9B,OAAO,CAAC+B,IAAK;MAAAN,QAAA,gBAC3BrB,OAAA;QAAK0B,SAAS,EAAE9B,OAAO,CAACgC,SAAU;QAAAP,QAAA,gBAC9BrB,OAAA;UAAK0B,SAAS,EAAE9B,OAAO,CAACiB,GAAI;UAAAQ,QAAA,EACzBR,GAAG,gBAAIb,OAAA;YAAK6B,GAAG,EAAEhB,GAAI;YAACiB,GAAG,EAAC;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,gBAAIzB,OAAA;YAAK6B,GAAG,EAAEE,OAAO,CAAC,uBAAuB,CAAE;YAACD,GAAG,EAAC;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC1G,eAEJzB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAAG0B,SAAS,EAAE9B,OAAO,CAACoC,CAAE;YAAAX,QAAA,GAAC,QAAM,EAAClB,IAAI;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrC,eAENzB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAAG0B,SAAS,EAAE9B,OAAO,CAACoC,CAAE;YAAAX,QAAA,GAAC,SAAO,EAAChB,KAAK;UAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvC,eAENzB,OAAA;UAAAqB,QAAA,gBACErB,OAAA,CAACH,QAAQ;YAACoC,KAAK,EAAE1B,IAAK;YAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,OAAO,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAACI,WAAW,EAAC,UAAU;YAACC,IAAI,EAAC;UAAU;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eACzGzB,OAAA,CAACH,QAAQ;YAAC0C,OAAO,EAAE,MAAOJ,CAAC,IAAK;cAC9B,IAAI5B,IAAI,CAACiC,IAAI,EAAE,CAACC,MAAM,GAAG,EAAE,EAAE;gBAC3BC,KAAK,CAAC,yCAAyC,CAAC;cAClD,CAAC,MACI;gBACH,IAAIC,GAAG,GAAG,MAAMjD,QAAQ,CAAC,mCAAmC,EAAE;kBAACkD,IAAI,EAAErC;gBAAI,CAAC,EAAE,EAAE,CAAC;gBAC/E,IAAIoC,GAAG,CAAC1B,MAAM,KAAK,GAAG,EAAE;kBAACT,OAAO,CAAC,EAAE,CAAC;kBAAEY,QAAQ,EAAE;gBAAA;gBAChDV,MAAM,CAACiC,GAAG,CAACzB,IAAI,CAACT,GAAG,CAAC;cACtB;YACF,CACG;YACDmC,IAAI,EAAC,SAAS;YAACN,IAAI,EAAC;UAAQ;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5B,eACRzB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAAAqB,QAAA,EAAKZ;UAAG;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACRzB,OAAA;QAAK0B,SAAS,EAAE9B,OAAO,CAACe,KAAM;QAAAU,QAAA,EAC3BV,KAAK,GAAGA,KAAK,CAACkC,GAAG,CAACtC,IAAI,iBAAIP,OAAA,CAACF,QAAQ;UAACgD,YAAY,EAAEnC,KAAM;UAACoC,OAAO,EAAExC,IAAI,CAAC,CAAC,CAAE;UAACyC,IAAI,EAAEzC,IAAI,CAAC,CAAC,CAAE;UAA2B0C,KAAK,EAAE1C,IAAI,CAAC,CAAC;QAAE,GAApCI,KAAK,CAACuC,OAAO,CAAC3C,IAAI,CAAC;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAmB,CAAC,GAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;AAEZ,CAAC;AAAAvB,EAAA,CA1EKD,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AA4Ed,eAAeA,QAAQ;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}