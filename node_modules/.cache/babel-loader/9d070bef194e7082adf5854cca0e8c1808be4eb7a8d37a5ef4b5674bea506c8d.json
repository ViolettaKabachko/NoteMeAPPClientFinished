{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miham\\\\Desktop\\\\new_proj\\\\React\\\\new-app\\\\src\\\\Pages\\\\Settings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NewInput from '../Components/UI/NewInput/NewInput';\nimport { sendData } from '../fetch';\nimport Navbar from '../Components/UI/Navbar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [nickname, setNickname] = useState(\"\");\n  const [nicknameRes, setNicknameRes] = useState(\"\");\n  const [avatar, setAvatar] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Change nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n        placeholder: \"New nickname\",\n        type: \"input\",\n        value: nickname,\n        onChange: e => setNickname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n        text: \"Submit\",\n        type: \"button\",\n        onClick: async () => {\n          let res = await sendData('http://127.0.0.1:5000/update_info', {\n            nickname\n          }, 'update');\n          setNicknameRes(res.data.msg);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nicknameRes === 'Uploaded' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#34eb8c\"\n        },\n        children: nicknameRes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#eb3458\"\n        },\n        children: nicknameRes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 97\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Change avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: () => setAvatar(e.t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewInput, {\n        type: \"button\",\n        text: \"Upload avatar\",\n        onClick: async () => {\n          const data = new FormData('avatar');\n          let res = await sendData('http://127.0.0.1:5000/update_info');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"uKAaG1vZVIbuvWTSXA7KTXKX3bg=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","NewInput","sendData","Navbar","jsxDEV","_jsxDEV","Settings","_s","nickname","setNickname","nicknameRes","setNicknameRes","avatar","setAvatar","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","e","target","text","onClick","res","data","msg","style","color","accept","t","FormData","_c","$RefreshReg$"],"sources":["C:/Users/miham/Desktop/new_proj/React/new-app/src/Pages/Settings.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport NewInput from '../Components/UI/NewInput/NewInput'\r\nimport { sendData } from '../fetch'\r\nimport Navbar from '../Components/UI/Navbar/Navbar'\r\n\r\nconst Settings = () => {\r\n    const [nickname, setNickname] = useState(\"\")\r\n    const [nicknameRes, setNicknameRes] = useState(\"\")\r\n    const [avatar, setAvatar] = useState(null)\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div>\r\n                <p>Change nickname</p>\r\n                <NewInput placeholder=\"New nickname\" type='input' value={nickname} onChange={(e) => setNickname(e.target.value)}/>\r\n                <NewInput text='Submit' type='button' onClick={async() => \r\n                    {let res = await sendData('http://127.0.0.1:5000/update_info', {nickname}, 'update')\r\n                    setNicknameRes(res.data.msg)\r\n                    }}/>\r\n            </div>\r\n            <div>\r\n                {nicknameRes === 'Uploaded' ? <p style={{color: \"#34eb8c\"}}>{nicknameRes}</p> : <p style={{color: \"#eb3458\"}}>{nicknameRes}</p>}\r\n            </div>\r\n            <div>\r\n                <br></br>\r\n            </div>\r\n            <div>\r\n                <p>Change avatar</p>\r\n                <NewInput type='file' accept=\"image/*\" onChange={() => setAvatar(e.t)}/>\r\n                <NewInput type='button' text='Upload avatar' onClick={async () => {\r\n                    const data = new FormData('avatar', )\r\n                    let res = await sendData('http://127.0.0.1:5000/update_info', )\r\n                }}/>\r\n            </div>      \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAASC,QAAQ,QAAQ,UAAU;AACnC,OAAOC,MAAM,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,oBACIK,OAAA;IAAAS,QAAA,gBACIT,OAAA,CAACF,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACTb,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACtBb,OAAA,CAACJ,QAAQ;QAACkB,WAAW,EAAC,cAAc;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEb,QAAS;QAACc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAClHb,OAAA,CAACJ,QAAQ;QAACwB,IAAI,EAAC,QAAQ;QAACL,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAE,MAAAA,CAAA,KAC3C;UAAC,IAAIC,GAAG,GAAG,MAAMzB,QAAQ,CAAC,mCAAmC,EAAE;YAACM;UAAQ,CAAC,EAAE,QAAQ,CAAC;UACpFG,cAAc,CAACgB,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC;QAC5B;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN,eACNb,OAAA;MAAAS,QAAA,EACKJ,WAAW,KAAK,UAAU,gBAAGL,OAAA;QAAGyB,KAAK,EAAE;UAACC,KAAK,EAAE;QAAS,CAAE;QAAAjB,QAAA,EAAEJ;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,gBAAGb,OAAA;QAAGyB,KAAK,EAAE;UAACC,KAAK,EAAE;QAAS,CAAE;QAAAjB,QAAA,EAAEJ;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7H,eACNb,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,eACNb,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACpBb,OAAA,CAACJ,QAAQ;QAACmB,IAAI,EAAC,MAAM;QAACY,MAAM,EAAC,SAAS;QAACV,QAAQ,EAAEA,CAAA,KAAMT,SAAS,CAACU,CAAC,CAACU,CAAC;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACxEb,OAAA,CAACJ,QAAQ;QAACmB,IAAI,EAAC,QAAQ;QAACK,IAAI,EAAC,eAAe;QAACC,OAAO,EAAE,MAAAA,CAAA,KAAY;UAC9D,MAAME,IAAI,GAAG,IAAIM,QAAQ,CAAC,QAAQ,CAAG;UACrC,IAAIP,GAAG,GAAG,MAAMzB,QAAQ,CAAC,mCAAmC,CAAG;QACnE;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEd,CAAC;AAAAX,EAAA,CAhCKD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAkCd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}