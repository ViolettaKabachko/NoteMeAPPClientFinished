{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miham\\\\Desktop\\\\new_proj\\\\React\\\\new-app\\\\src\\\\Pages\\\\LogIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogIn = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const sendData = async (url, data) => {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n    let res = await response.json();\n    console.log(res);\n    console.log(res.status);\n    if (res.status === 200) {\n      setEmail(\"\");\n      setPassword(\"\");\n      setText(res.access_token);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        type: \"text\",\n        placeholder: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        type: \"password\",\n        placeholder: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"LogIn\",\n        onClick: () => sendData(\"http://127.0.0.1:5000/login\", {\n          email,\n          password\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(LogIn, \"Z/qHfcoMR3PvF8Yv8GFp0l7/N6s=\");\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LogIn","_s","email","setEmail","password","setPassword","text","setText","sendData","url","data","response","fetch","method","body","JSON","stringify","res","json","console","log","status","access_token","children","value","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/miham/Desktop/new_proj/React/new-app/src/Pages/LogIn.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst LogIn = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const sendData = async (url, data) => {       \r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n        let res = await response.json();\r\n        console.log(res)\r\n        console.log(res.status)\r\n        if (res.status === 200) {\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setText(res.access_token)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <form>\r\n            <input value={email} type=\"text\" placeholder='email' onChange={(e) => setEmail(e.target.value)}></input>\r\n            <input value={password} type=\"password\" placeholder='password' onChange={(e) => setPassword(e.target.value)}></input>\r\n            <input type=\"button\" value=\"LogIn\" onClick={() => sendData(\"http://127.0.0.1:5000/login\", {email, password})}></input>            \r\n        </form>\r\n        <h3>{text}</h3>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default LogIn"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,QAAQ,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAC9BI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;IACF,IAAIO,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChBE,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,MAAM,CAAC;IACvB,IAAIJ,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;MACpBlB,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,OAAO,CAACU,GAAG,CAACK,YAAY,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,gBACAxB,OAAA;MAAAwB,QAAA,gBACIxB,OAAA;QAAOyB,KAAK,EAAEtB,KAAM;QAACuB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAACC,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACL,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACxGlC,OAAA;QAAOyB,KAAK,EAAEpB,QAAS;QAACqB,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACL,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACrHlC,OAAA;QAAO0B,IAAI,EAAC,QAAQ;QAACD,KAAK,EAAC,OAAO;QAACU,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,6BAA6B,EAAE;UAACN,KAAK;UAAEE;QAAQ,CAAC;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnH,eACPlC,OAAA;MAAAwB,QAAA,EAAKjB;IAAI;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEd,CAAC;AAAAhC,EAAA,CA9BKD,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAgCX,eAAeA,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}